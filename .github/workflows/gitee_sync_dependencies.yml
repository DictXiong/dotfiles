name: sync dependencies to gitee
on:
  schedule:
    - cron: 0 4 * * *
  workflow_dispatch: ~
jobs:
  ohmyzsh:
    runs-on: ubuntu-20.04
    steps:
    - name: ohmyzsh repo  # 名字随便起
      uses: Yikun/hub-mirror-action@v1.2  # 使用Yikun/hub-mirror-action
      with:
        src: github/ohmyzsh  # 源端账户名(github)
        dst: gitee/dictxiong  # 目的端账户名(gitee)
        dst_key: ${{ secrets.GITEE_PRIVATE_KEY }}  # SSH密钥对中的私钥
        dst_token:  ${{ secrets.GITEE_TOKEN }}  # Gitee账户的私人令牌
        src_account_type: org
        dst_account_type: user  # 账户类型
        clone_style: "https"  # 使用https方式进行clone，也可以使用ssh
        debug: true  # 启用后会显示所有执行命令
        force_update: true  # 启用后，强制同步，即强制覆盖目的端仓库
        static_list: "ohmyzsh"  # 静态同步列表，在此填写需要同步的仓库名称，可填写多个
        timeout: '600s'  # git超时设置，超时后会自动重试git操作
  zsh-users:
    runs-on: ubuntu-20.04
    steps:
    - name: zsh-users repos  # 名字随便起
      uses: Yikun/hub-mirror-action@v1.2  # 使用Yikun/hub-mirror-action
      with:
        src: github/zsh-users  # 源端账户名(github)
        dst: gitee/dictxiong  # 目的端账户名(gitee)
        dst_key: ${{ secrets.GITEE_PRIVATE_KEY }}  # SSH密钥对中的私钥
        dst_token:  ${{ secrets.GITEE_TOKEN }}  # Gitee账户的私人令牌
        src_account_type: org
        dst_account_type: user  # 账户类型
        clone_style: "https"  # 使用https方式进行clone，也可以使用ssh
        debug: true  # 启用后会显示所有执行命令
        force_update: true  # 启用后，强制同步，即强制覆盖目的端仓库
        static_list: "antigen,zsh-syntax-highlighting,zsh-autosuggestions,zsh-completions"  # 静态同步列表，在此填写需要同步的仓库名称，可填写多个
        timeout: '600s'  # git超时设置，超时后会自动重试git操作
  zdharma-continuum:
    runs-on: ubuntu-20.04
    steps:
    - name: zdharma-continuum repos  # 名字随便起
      uses: Yikun/hub-mirror-action@v1.2  # 使用Yikun/hub-mirror-action
      with:
        src: github/zdharma-continuum  # 源端账户名(github)
        dst: gitee/dictxiong  # 目的端账户名(gitee)
        dst_key: ${{ secrets.GITEE_PRIVATE_KEY }}  # SSH密钥对中的私钥
        dst_token:  ${{ secrets.GITEE_TOKEN }}  # Gitee账户的私人令牌
        src_account_type: org
        dst_account_type: user  # 账户类型
        clone_style: "https"  # 使用https方式进行clone，也可以使用ssh
        debug: true  # 启用后会显示所有执行命令
        force_update: true  # 启用后，强制同步，即强制覆盖目的端仓库
        static_list: "fast-syntax-highlighting"  # 静态同步列表，在此填写需要同步的仓库名称，可填写多个
        timeout: '600s'  # git超时设置，超时后会自动重试git操作
  tmux-mem-cpu-load:
    runs-on: ubuntu-20.04
    steps:
    - name: thewtex/tmux-mem-cpu-load  # 名字随便起
      uses: Yikun/hub-mirror-action@v1.2  # 使用Yikun/hub-mirror-action
      with:
        src: github/thewtex  # 源端账户名(github)
        dst: gitee/dictxiong  # 目的端账户名(gitee)
        dst_key: ${{ secrets.GITEE_PRIVATE_KEY }}  # SSH密钥对中的私钥
        dst_token:  ${{ secrets.GITEE_TOKEN }}  # Gitee账户的私人令牌
        src_account_type: user
        dst_account_type: user  # 账户类型
        clone_style: "https"  # 使用https方式进行clone，也可以使用ssh
        debug: true  # 启用后会显示所有执行命令
        force_update: true  # 启用后，强制同步，即强制覆盖目的端仓库
        static_list: "tmux-mem-cpu-load"  # 静态同步列表，在此填写需要同步的仓库名称，可填写多个
        timeout: '600s'  # git超时设置，超时后会自动重试git操作
  tmux-plugins:
    runs-on: ubuntu-20.04
    steps:
    - name: tmux-plugins # 名字随便起
      uses: Yikun/hub-mirror-action@v1.2  # 使用Yikun/hub-mirror-action
      with:
        src: github/tmux-plugins  # 源端账户名(github)
        dst: gitee/dictxiong  # 目的端账户名(gitee)
        dst_key: ${{ secrets.GITEE_PRIVATE_KEY }}  # SSH密钥对中的私钥
        dst_token:  ${{ secrets.GITEE_TOKEN }}  # Gitee账户的私人令牌
        src_account_type: org
        dst_account_type: user  # 账户类型
        clone_style: "https"  # 使用https方式进行clone，也可以使用ssh
        debug: true  # 启用后会显示所有执行命令
        force_update: true  # 启用后，强制同步，即强制覆盖目的端仓库
        static_list: "tpm,tmux-resurrect"  # 静态同步列表，在此填写需要同步的仓库名称，可填写多个
        timeout: '600s'  # git超时设置，超时后会自动重试git操作
  vundle-vim:
    runs-on: ubuntu-20.04
    steps:
    - name: VundleVim/Vundle-vim # 名字随便起
      uses: Yikun/hub-mirror-action@v1.2  # 使用Yikun/hub-mirror-action
      with:
        src: github/VundleVim  # 源端账户名(github)
        dst: gitee/dictxiong  # 目的端账户名(gitee)
        dst_key: ${{ secrets.GITEE_PRIVATE_KEY }}  # SSH密钥对中的私钥
        dst_token:  ${{ secrets.GITEE_TOKEN }}  # Gitee账户的私人令牌
        src_account_type: org
        dst_account_type: user  # 账户类型
        clone_style: "https"  # 使用https方式进行clone，也可以使用ssh
        debug: true  # 启用后会显示所有执行命令
        force_update: true  # 启用后，强制同步，即强制覆盖目的端仓库
        static_list: "Vundle.vim"  # 静态同步列表，在此填写需要同步的仓库名称，可填写多个
        timeout: '600s'  # git超时设置，超时后会自动重试git操作
  onedark-vim:
    runs-on: ubuntu-20.04
    steps:
    - name: joshdick/onedark-vim # 名字随便起
      uses: Yikun/hub-mirror-action@v1.2  # 使用Yikun/hub-mirror-action
      with:
        src: github/joshdick  # 源端账户名(github)
        dst: gitee/dictxiong  # 目的端账户名(gitee)
        dst_key: ${{ secrets.GITEE_PRIVATE_KEY }}  # SSH密钥对中的私钥
        dst_token:  ${{ secrets.GITEE_TOKEN }}  # Gitee账户的私人令牌
        src_account_type: user
        dst_account_type: user  # 账户类型
        clone_style: "https"  # 使用https方式进行clone，也可以使用ssh
        debug: true  # 启用后会显示所有执行命令
        force_update: true  # 启用后，强制同步，即强制覆盖目的端仓库
        static_list: "onedark.vim"  # 静态同步列表，在此填写需要同步的仓库名称，可填写多个
        timeout: '600s'  # git超时设置，超时后会自动重试git操作
  fzf:
    runs-on: ubuntu-20.04
    steps:
    - name: junegunn/fzf # 名字随便起
      uses: Yikun/hub-mirror-action@v1.2  # 使用Yikun/hub-mirror-action
      with:
        src: github/junegunn  # 源端账户名(github)
        dst: gitee/dictxiong  # 目的端账户名(gitee)
        dst_key: ${{ secrets.GITEE_PRIVATE_KEY }}  # SSH密钥对中的私钥
        dst_token:  ${{ secrets.GITEE_TOKEN }}  # Gitee账户的私人令牌
        src_account_type: user
        dst_account_type: user  # 账户类型
        clone_style: "https"  # 使用https方式进行clone，也可以使用ssh
        debug: true  # 启用后会显示所有执行命令
        force_update: true  # 启用后，强制同步，即强制覆盖目的端仓库
        static_list: "fzf"  # 静态同步列表，在此填写需要同步的仓库名称，可填写多个
        timeout: '600s'  # git超时设置，超时后会自动重试git操作